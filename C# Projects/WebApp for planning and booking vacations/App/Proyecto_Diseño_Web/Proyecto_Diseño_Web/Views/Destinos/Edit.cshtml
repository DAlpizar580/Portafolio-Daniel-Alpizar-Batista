@model Proyecto_Diseño_Web.Models.TableViewModels.DestinosTVM
@{
    ViewBag.Title = "Home";
    Layout = "~/Views/Shared/_Layout - Admin.cshtml";
}
<main>
    <h2>Edit Destination</h2>

    @using (Html.BeginForm("Edit", "Destinos", FormMethod.Post, new { enctype = "multipart/form-data", role = "form" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Destination</h4>
            <hr />

            @if (Model == null)
            {
                <p class="text-danger">No existe el destino.</p>
            }
            else
            {
                @Html.HiddenFor(model => model.IdDestino)

                <div class="form-group">
                    @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Provincia, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Provincia, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Provincia, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Categoria, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Categoria, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Categoria, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Precio_Minimo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Precio_Minimo, new { @class = "form-control", type = "number" })
                        @Html.ValidationMessageFor(model => model.Precio_Minimo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Precio_Maximo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Precio_Maximo, new { @class = "form-control", type = "number" })
                        @Html.ValidationMessageFor(model => model.Precio_Maximo, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Descripcion, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Direccion, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Direccion, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">Imagen actual</label>
                    <div class="col-md-10">
                        @if (Model.Imagen != null)
                        {
                            <img src="data:image/jpeg;base64,@Convert.ToBase64String(Model.Imagen)" alt="Destination Image" style="width:100px;height:100px;" />
                        }
                        else
                        {
                            <p>No hay una imagen.</p>
                        }
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Nueva imagen", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="file" name="NewImage" />
                    </div>
                </div>

                <br />
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-primary" />
                    </div>
                </div>
            }
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="button" class="btn btn-secondary" onclick="window.location.href='@Url.Action("Index", "ActividadesDestino", new { idDestino = Model.IdDestino })'">
                    Ver Actividades
                </button>
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="button" class="btn btn-secondary" onclick="window.location.href='@Url.Action("Index", "PaquetesDeViaje", new { idDestino = Model.IdDestino })'">
                    Ver Paquetes de Viaje
                </button>
            </div>
        </div>
    }
</main>
